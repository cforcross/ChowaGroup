name: Django Tests

on:
  push:
    branches:
      - main
      - dev
  
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      name:
        description: 'Person to greet'
        required: true
        default: 'Mona the Octocat'
      home:
        description: 'location'
        required: false
        default: 'The Octoverse'
  

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions

        ports:
          - 5433:5432

        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Workflow dispatch action
      run: |
        echo "Hello ${{ github.event.inputs.name }}!"
        echo "- in ${{ github.event.inputs.home }}!"
    - name: Django Testing Unittest
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_ENGINE: ${{secrets.DB_ENGINE}}
        EMAIL_BACKEND: ${{secrets.EMAIL_BACKEND}}
        EMAIL_USE_TLS: ${{secrets.EMAIL_USE_TLS}}
        EMAIL_PORT: ${{secrets.EMAIL_PORT}}
        EMAIL_HOST_USER: ${{secrets.EMAIL_HOST_USER}}
        EMAIL_HOST_PASSWORD: ${{secrets.EMAIL_HOST_PASSWORD}}

      run: |
        coverage run manage.py test && coverage report --fail-under=50 && coverage xml

    - name: Report coverage to codecov
      env: 
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_ENGINE: ${{secrets.DB_ENGINE}}

      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        directory: ./coverage/reports/
        fail_ci_if_error: true


        